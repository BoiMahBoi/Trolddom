[gd_resource type="VisualShader" load_steps=10 format=3 uid="uid://cv1w2j700rbed"]

[ext_resource type="Texture2D" uid="uid://dv3wnedp43yf" path="res://Bach/objekter/vfx/fire_texture.jpg" id="1_nsjvr"]

[sub_resource type="VisualShaderNodeTexture" id="VisualShaderNodeTexture_tjuaa"]
texture = ExtResource("1_nsjvr")

[sub_resource type="VisualShaderNodeInput" id="VisualShaderNodeInput_rfsw2"]
input_name = "uv"

[sub_resource type="VisualShaderNodeInput" id="VisualShaderNodeInput_e5j8o"]
input_name = "color"

[sub_resource type="VisualShaderNodeVectorOp" id="VisualShaderNodeVectorOp_yv3o0"]
default_input_values = [0, Quaternion(0, 0, 0, 0), 1, Quaternion(0, 0, 0, 0)]
op_type = 2
operator = 2

[sub_resource type="VisualShaderNodeVectorDecompose" id="VisualShaderNodeVectorDecompose_yfs3p"]
default_input_values = [0, Quaternion(0, 0, 0, 0)]
op_type = 2

[sub_resource type="VisualShaderNodeVectorDecompose" id="VisualShaderNodeVectorDecompose_2ewov"]
default_input_values = [0, Quaternion(0, 0, 0, 0)]
op_type = 2

[sub_resource type="VisualShaderNodeFloatOp" id="VisualShaderNodeFloatOp_g62ew"]
operator = 2

[sub_resource type="VisualShaderNodeBillboard" id="VisualShaderNodeBillboard_uriga"]
billboard_type = 2
keep_scale = true

[resource]
code = "shader_type spatial;
render_mode blend_mix, depth_draw_opaque, cull_back, diffuse_lambert, specular_schlick_ggx;

uniform sampler2D tex_frg_2;



void vertex() {
	mat4 n_out2p0;
// GetBillboardMatrix:2
	{
		mat4 __mvm = VIEW_MATRIX * mat4(INV_VIEW_MATRIX[0], MODEL_MATRIX[1], vec4(normalize(cross(INV_VIEW_MATRIX[0].xyz, MODEL_MATRIX[1].xyz)), 0.0), MODEL_MATRIX[3]);
		__mvm = __mvm * mat4(vec4(length(MODEL_MATRIX[0].xyz), 0.0, 0.0, 0.0), vec4(0.0, 1.0, 0.0, 0.0), vec4(0.0, 0.0, length(MODEL_MATRIX[2].xyz), 0.0), vec4(0.0, 0.0, 0.0, 1.0));
		n_out2p0 = __mvm;
	}


// Output:0
	MODELVIEW_MATRIX = n_out2p0;


}

void fragment() {
// Input:4
	vec4 n_out4p0 = COLOR;


// Input:3
	vec2 n_out3p0 = UV;


// Texture2D:2
	vec4 n_out2p0 = texture(tex_frg_2, n_out3p0);


// VectorOp:5
	vec4 n_out5p0 = n_out4p0 * n_out2p0;


// VectorDecompose:7
	float n_out7p0 = n_out4p0.x;
	float n_out7p1 = n_out4p0.y;
	float n_out7p2 = n_out4p0.z;
	float n_out7p3 = n_out4p0.w;


// VectorDecompose:6
	float n_out6p0 = n_out2p0.x;
	float n_out6p1 = n_out2p0.y;
	float n_out6p2 = n_out2p0.z;
	float n_out6p3 = n_out2p0.w;


// FloatOp:8
	float n_out8p0 = n_out7p3 * n_out6p0;


// Output:0
	ALBEDO = vec3(n_out5p0.xyz);
	ALPHA = n_out8p0;


}
"
graph_offset = Vector2(-196, 107)
nodes/vertex/2/node = SubResource("VisualShaderNodeBillboard_uriga")
nodes/vertex/2/position = Vector2(20, 260)
nodes/vertex/connections = PackedInt32Array(2, 0, 0, 10)
nodes/fragment/0/position = Vector2(1160, 280)
nodes/fragment/2/node = SubResource("VisualShaderNodeTexture_tjuaa")
nodes/fragment/2/position = Vector2(400, 160)
nodes/fragment/3/node = SubResource("VisualShaderNodeInput_rfsw2")
nodes/fragment/3/position = Vector2(20, 280)
nodes/fragment/4/node = SubResource("VisualShaderNodeInput_e5j8o")
nodes/fragment/4/position = Vector2(20, 500)
nodes/fragment/5/node = SubResource("VisualShaderNodeVectorOp_yv3o0")
nodes/fragment/5/position = Vector2(860, 180)
nodes/fragment/6/node = SubResource("VisualShaderNodeVectorDecompose_yfs3p")
nodes/fragment/6/position = Vector2(640, 380)
nodes/fragment/7/node = SubResource("VisualShaderNodeVectorDecompose_2ewov")
nodes/fragment/7/position = Vector2(660, 560)
nodes/fragment/8/node = SubResource("VisualShaderNodeFloatOp_g62ew")
nodes/fragment/8/position = Vector2(860, 340)
nodes/fragment/connections = PackedInt32Array(3, 0, 2, 0, 4, 0, 5, 0, 2, 0, 5, 1, 5, 0, 0, 0, 2, 0, 6, 0, 4, 0, 7, 0, 7, 3, 8, 0, 6, 0, 8, 1, 8, 0, 0, 1)
